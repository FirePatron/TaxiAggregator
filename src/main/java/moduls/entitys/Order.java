package moduls.entitys;
// Generated 13.08.2021 16:05:29 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;

/**
 * Order generated by hbm2java
 */
@Entity
@Table(name="order"
    ,catalog="taxicomp"
)
public class Order  implements java.io.Serializable {


     private int idOrder;
     private Geo geoByEndGeo;
     private Geo geoByStartGeo;
     private User user;
     private Date meetingTime;
     private Set<Searchforaggregator> searchforaggregators = new HashSet<Searchforaggregator>(0);

    public Order() {
    }

	
    public Order(int idOrder, User user, Date meetingTime) {
        this.idOrder = idOrder;
        this.user = user;
        this.meetingTime = meetingTime;
    }
    public Order(User user, Geo geoByEndGeo, Geo geoByStartGeo, Date meetingTime) {
       this.geoByEndGeo = geoByEndGeo;
       this.geoByStartGeo = geoByStartGeo;
       this.user = user;
       this.meetingTime = meetingTime;
    }
   
     @Id @GeneratedValue(strategy = GenerationType.IDENTITY)

    
    @Column(name="idOrder", unique=true, nullable=false)
    public int getIdOrder() {
        return this.idOrder;
    }
    
    public void setIdOrder(int idOrder) {
        this.idOrder = idOrder;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="EndGeo")
    public Geo getGeoByEndGeo() {
        return this.geoByEndGeo;
    }
    
    public void setGeoByEndGeo(Geo geoByEndGeo) {
        this.geoByEndGeo = geoByEndGeo;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="StartGeo")
    public Geo getGeoByStartGeo() {
        return this.geoByStartGeo;
    }
    
    public void setGeoByStartGeo(Geo geoByStartGeo) {
        this.geoByStartGeo = geoByStartGeo;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idUser", nullable=false)
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="MeetingTime", nullable=false, length=19)
    public Date getMeetingTime() {
        return this.meetingTime;
    }
    
    public void setMeetingTime(Date meetingTime) {
        this.meetingTime = meetingTime;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="order")
    public Set<Searchforaggregator> getSearchforaggregators() {
        return this.searchforaggregators;
    }
    
    public void setSearchforaggregators(Set<Searchforaggregator> searchforaggregators) {
        this.searchforaggregators = searchforaggregators;
    }




}


